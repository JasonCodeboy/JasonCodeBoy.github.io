(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{397:function(s,t,a){"use strict";a.r(t);var n=a(33),r=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"全局和局部注册组件，命名规范，props-作用和原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局和局部注册组件，命名规范，props-作用和原理"}},[s._v("#")]),s._v(" 全局和局部注册组件，命名规范，props 作用和原理")]),s._v(" "),a("p",[s._v("如何定义一个组件？当我们在 new Vue() 的时候，它就是一个组件。这是一种函数式的写法。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" component "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    template"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'<div>这是一个组件</div>'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\ncomponent 这时候仅仅是一个对象，它还不是 Vue 的组件，但是我们可以通过几种方式，去把它变成 Vue 的组件\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h4",{attrs:{id:"全局注册组件："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局注册组件："}},[s._v("#")]),s._v(" 全局注册组件：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("首先，我们可以在全局使用 Vue 这个类的 component 方法，去把这个组件定义到全局去使用。\n\nVue.component('CompOne', component)\n\n这样的话，我们就定义了一个叫 CompOne 的组件。\n\n我们在页面所有的地方去使用 CompOne 写在 template 里面，它就代表我们使用了 component 组件\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[a("img",{attrs:{src:"/img/vue-8-1.png",alt:"在这里插入图片描述"}})]),s._v(" "),a("p",[s._v("为什么上面 2 个地方的命名方式不一样呢？")]),s._v(" "),a("p",[s._v("定义组件名的时候，我们最好使用大驼峰式命名。\n（因为定义的组件名是 JS 里面的变量，所以需要用驼峰式。而一个 Vue 的组件，我们可以认为它是一个类，那么类的命名，肯定是需要用大驼峰式）")]),s._v(" "),a("p",[s._v("当写到 template 里面时，用全小写 + 连接符的方式。（因为 HTML 不区分大小写）")]),s._v(" "),a("p",[s._v("这样的命名方式比较清晰。")]),s._v(" "),a("p",[s._v("如果我们需要这个组件只在某个地方使用呢？")]),s._v(" "),a("p",[s._v("那么我们需要新增一个配置项 components，然后按照 key : value 的形式去定义组件。")]),s._v(" "),a("p",[s._v("key 就是组件的名字，value 就是组件的对象。\n"),a("img",{attrs:{src:"/img/vue-8-2.png",alt:"在这里插入图片描述"}}),s._v("\n需要注意的是：")]),s._v(" "),a("p",[s._v("我们在使用 data 定义组件内数据的时候，如果我们这一个组件不是通过 new Vue() 的方式去生成出来的，而是我们注册全局或者局部去使用的话，那么 data 必须要是一个 function，而且 return 的是一个新建的对象。")]),s._v(" "),a("p",[s._v("那么为什么要这么去做呢？我们可以利用一个变量来逃避这种方法，如下图：")]),s._v(" "),a("p",[a("img",{attrs:{src:"/img/vue-8-3.png",alt:"在这里插入图片描述"}}),s._v("\n我们发现，在上面一个组件输入，下面输入框的数字也跟着一起变。")]),s._v(" "),a("p",[s._v("我们使用 2 个组件，肯定是希望它们的数据都是单独一份不一样的。")]),s._v(" "),a("p",[s._v("而不是我们改了第一个组件的数据，结果第二个组件里面的数据也跟着一起改。")]),s._v(" "),a("p",[s._v("props 是用来定义这个组件，在被外部使用的时候，它的一些可变的行为。")]),s._v(" "),a("p",[s._v("也就是说，我们去定义一个组件的时候，我们希望的是这个组件帮我们解决一系列通用性的问题。")]),s._v(" "),a("p",[s._v("就是说这个组件会指定一个功能，然后把这些功能包含进去，主要的目的就是处理这些功能。")]),s._v(" "),a("p",[s._v("我们处理一些功能的时候，肯定不是每个地方都不是一模一样，它会需要一些不同的配置项，来配置这个组件的一些行为。")]),s._v(" "),a("p",[s._v("虽然大方向上是解决同一个问题，但是在一些小的细节上会有一些差异，那么这些差异通过什么去体现？就是通过 props")]),s._v(" "),a("p",[a("img",{attrs:{src:"/img/vue-8-4.png",alt:"在这里插入图片描述"}})]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("注意：\nprops 内的命名和组件的命名一样。\n\nprops"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 大驼峰式命名")]),s._v("\n    propOne"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" String\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n在使用 propOne 的时候用连接符的形式。（Vue 会自动的去做处理，匹配到真正 props 内的名称）\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("comp"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("one prop"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("one"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"xxx"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("comp"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("one"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("注意：传进来的 props 是不能被修改的。")]),s._v(" "),a("p",[s._v("因为我们在组件内部主动的去更改 props，其实是不对的，如果你要去主动改一个值，那么你这个值更应该定义在 data 里。")]),s._v(" "),a("p",[s._v("props 是外部组件，用来约束这个组件的展示行为。")]),s._v(" "),a("p",[s._v("并且，作为一个子节点，我们不应该去主动的修改父节点给我们的一些定义。")]),s._v(" "),a("p",[s._v("如果我们要去修改父节点的一些定义，说明我们本身这个组件的行为和定义就没做好。")]),s._v(" "),a("p",[s._v("那么如果我们要改 props，那么要怎么做呢？我们可以去触发一些事件，告诉外部的组件。")]),s._v(" "),a("hr"),s._v(" "),a("h3",{attrs:{id:"方法一："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法一："}},[s._v("#")]),s._v(" 方法一：")]),s._v(" "),a("p",[a("img",{attrs:{src:"/img/vue-8-5.png",alt:"在这里插入图片描述"}}),s._v("\n虽然可能有点绕，但是这个就是 props 的单项数据流概念。因为如果你经常两边去改 props，它涉及到你的父组件和子组件。")]),s._v(" "),a("p",[s._v("如果你子组件可以随便改父组件的内容，就会导致一个逻辑的混乱，开发中就会出现很多的问题。")]),s._v(" "),a("h3",{attrs:{id:"方法二："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法二："}},[s._v("#")]),s._v(" 方法二：")]),s._v(" "),a("p",[a("img",{attrs:{src:"/img/vue-8-6.png",alt:"在这里插入图片描述"}})]),s._v(" "),a("p",[s._v("this.$emit 就是实例上面的 $emit。我们在子组件上 @change，实际上就是绑定了 $on。")]),s._v(" "),a("p",[s._v("comp-one 其实就是一个 Vue 的实例。")]),s._v(" "),a("p",[s._v("props 绑定事件的原理也就是：通过 $on 在 Vue 的实例上绑定一个事件，在通过 $emit 触发。")]),s._v(" "),a("hr"),s._v(" "),a("h3",{attrs:{id:"props-的数据验证："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#props-的数据验证："}},[s._v("#")]),s._v(" props 的数据验证：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("props"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    active"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        type"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Boolean"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        required"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 必传，不然报 warn")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    propOne"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        type"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" String"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'123'")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 默认值")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    propTwo"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        type"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果默认值是个引用类型：数组")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    propThree"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        type"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("default")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果默认值是个引用类型：对象")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    propFour"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        type"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" String"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("validator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("外部传入的val")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 更严格的验证")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在这里判断是否符合你的要求")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" val "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'string'")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br")])])])}),[],!1,null,null,null);t.default=r.exports}}]);