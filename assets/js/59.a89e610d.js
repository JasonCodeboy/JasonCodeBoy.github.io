(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{379:function(v,e,t){"use strict";t.r(e);var p=t(33),l=Object(p.a)({},(function(){var v=this,e=v.$createElement,t=v._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"v-model-原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v-model-原理"}},[v._v("#")]),v._v(" v-model 原理")]),v._v(" "),t("p",[v._v("首先，我们自己实现一个 v-model，看看什么原理：")]),v._v(" "),t("p",[t("img",{attrs:{src:"/img/vue-10-1.png",alt:"在这里插入图片描述"}}),v._v("\n看完上图，我们可以得出一个结论：")]),v._v(" "),t("p",[v._v("我们在 comp-one 上面使用 v-model，就等价于：我们去绑定了 value 以及它的 @input。如下图：\n"),t("img",{attrs:{src:"/img/vue-10-2.png",alt:"在这里插入图片描述"}}),v._v("\n这就是我们在组件内部实现 v- model 最简单的一个方式。")]),v._v(" "),t("p",[v._v("我们只需要在组件里面加上 props，有一个 value。然后在组件要去修改数据的时候，$emit 一个事件，然后把新的值 $emit 出去。")]),v._v(" "),t("p",[v._v("这就实现了 Vue 的一个双向绑定。")]),v._v(" "),t("p",[v._v("v-model 这个指令里面，它其实就是给我们这个组件上面去增加了一个 value 的 props，以及增加了一个事件监听 input 事件。")]),v._v(" "),t("p",[v._v("然后 v-model 里面帮我们去处理了这个双向绑定的逻辑，本质上就和我们上面的实现是一样的。")]),v._v(" "),t("p",[v._v("那么，v-model 是不是只有这么一点功能呢？当然不是。")]),v._v(" "),t("p",[v._v("因为有时候，我们给这个组件去定义 props 的时候，需要去单独加一个 value，去实现一个另外的功能。")]),v._v(" "),t("p",[v._v("但同时，如果我们这个组件又要实现双向绑定，它又必须要加 value，那么这两个 props 就会冲突。")]),v._v(" "),t("p",[v._v("我们并不希望，在这个时候用到的 v-model，是要声明的 value props。而是用其他的一个名字，那么有没有办法呢？")]),v._v(" "),t("p",[v._v("我们可以利用 model 对象，进行改名。\n"),t("img",{attrs:{src:"/img/vue-10-3.png",alt:"在这里插入图片描述"}}),v._v("\n这就是我们自定义 v-model 实现的时候，我们可以给这些变量的名称，我们去给它定义下，这样的话就可以更灵活一点。")])])}),[],!1,null,null,null);e.default=l.exports}}]);