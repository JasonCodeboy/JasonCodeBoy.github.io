(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{346:function(s,t,a){"use strict";a.r(t);var n=a(33),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"模板编译"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模板编译"}},[s._v("#")]),s._v(" 模板编译")]),s._v(" "),a("h2",{attrs:{id:"模板是-vue-开发中最常用的部分，即与使用相关联的原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模板是-vue-开发中最常用的部分，即与使用相关联的原理"}},[s._v("#")]),s._v(" 模板是 vue 开发中最常用的部分，即与使用相关联的原理")]),s._v(" "),a("h2",{attrs:{id:"它不是-html，有指令、插值、js-表达式，到底是什么？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#它不是-html，有指令、插值、js-表达式，到底是什么？"}},[s._v("#")]),s._v(" 它不是 html，有指令、插值、js 表达式，到底是什么？")]),s._v(" "),a("h2",{attrs:{id:"面试不会直接问，但会通过-组件渲染和更新过程-考察"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面试不会直接问，但会通过-组件渲染和更新过程-考察"}},[s._v("#")]),s._v(' 面试不会直接问，但会通过 "组件渲染和更新过程" 考察')]),s._v(" "),a("p",[a("strong",[s._v("1. 模板不是 html，有指令，插值，js 表达式，能实现判断、循环")])]),s._v(" "),a("p",[a("strong",[s._v("2. html 是标签语言，只有 js 才能实现判断、循环（图灵完备的）")])]),s._v(" "),a("p",[a("strong",[s._v("3. 因此，模板一定是转换为某种 js 代码，即编译模板")])]),s._v(" "),a("p",[a("strong",[s._v("前置知识：JS 的 with 语法")])]),s._v(" "),a("p",[a("code",[s._v("let obj = { a: 1, b: 2}")])]),s._v(" "),a("ol",[a("li",[a("p",[s._v("改变{} 内自由变量的查找规则，当做 obj 属性来查找")])]),s._v(" "),a("li",[a("p",[s._v("如果找不到匹配的 obj 属性，就会报错")])]),s._v(" "),a("li",[a("p",[s._v("wite 要慎用，它打破了作用域规则，易读性变差")])])]),s._v(" "),a("p",[a("strong",[s._v("vue template complier 将模板编译为 render 函数")])]),s._v(" "),a("p",[a("strong",[s._v("执行 render 函数生成 vnode")])]),s._v(" "),a("p",[a("strong",[s._v("按照以下操作创建一个 demo")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mkdir vue-demo\ncd vue-demo\nnpm init -y\nnpm install vue-template-compiler --save\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("在根目录新建 index.js 代码如下")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// index.js")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" compiler "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"vue-template-compiler"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 插值")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" template "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<p>{{message}}</p>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 编译")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" res "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" compiler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("compile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("template"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("render"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("直接在终端输入"),a("code",[s._v("node index.js")]),s._v("执行")]),s._v(" "),a("p",[s._v("我们发现看到输出了"),a("code",[s._v("with(this){return _c('p',[_v(_s(message))])}")])]),s._v(" "),a("p",[s._v("this 是什么呢 this 就是我们的 vm 实例 比如："),a("code",[s._v("const vm = new Vue({...})")])]),s._v(" "),a("p",[s._v("  在上面说过，用了 with 语法之后，自由变量的查找都会变成 with 的查找，_c，_v，_s ,message 也是查找 this 的，data 上的 message 都是挂在到 vue 的实例上的，这个都知道。我们的模板最后被转换成了一段 js 代码，这个代码是什么呢，是一个函数，然后执行这个函数 最后 return 一个"),a("code",[s._v("_c('p',[_v(_s(message))])")]),s._v("，这个非常类似于 h 函数。")]),s._v(" "),a("p",[s._v("  _c 到底是什么？在 vue 的源码里面就是 createElement 的意思，createElement 其实就是我们的 h 函数，第一个参数传入的是一个 p 标签，后面传的是一个子元素，_v 是 createTextVNode， _s 就是 toString。最后翻译过来就是这样"),a("code",[s._v("with(this){return createElement('p',[createTextVNode，(toString(message))])}")]),s._v("。翻译一下就是创建一个 p 标签，子元素创建一个 textVNode，然后后面是一个字符串。是不是就是我们当前的这个 dom 结构"),a("code",[s._v("<p>")]),s._v("{{"),a("code",[s._v("message")]),s._v("}}"),a("code",[s._v("</p>")]),s._v("\n  h 函数执行返回的就是 vnode，然后我们执行的 createElement 的函数返回的也是一个 vnode，里面的 message 是谁呢，message 就是我们用了 with 语法里面的当前组件的变量"),a("code",[s._v("this.message")])]),s._v(" "),a("h3",{attrs:{id:"接下来来看组件表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#接下来来看组件表达式"}},[s._v("#")]),s._v(" 接下来来看组件表达式")]),s._v(" "),a("p",[a("strong",[s._v("代码")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" compiler "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"vue-template-compiler"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 组件表达式")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" template "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("<p>{{flag ? message : 'no message found' }}</p>")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 编译")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" res "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" compiler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("compile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("template"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("render"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("  这里注意有两个变量，flag 和 message，执行结果"),a("code",[s._v("with(this){return _c('p',[_v(_s(flag ? message : 'no message found'))])}")]),s._v("，和上面同理，最后我们发现_s 创建一个 string 类型的字符串，然后里面执行了一个三元表达式，其实我们在 template 里面写的表达式，就是被当做 js 代码执行的。没有什么奇怪的魔术，就是变成一段 js 代码而已。最后返回的还是一个 vnode，只不过 vnode 里面带了一些函数。")]),s._v(" "),a("h3",{attrs:{id:"接下来看属性和动态属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#接下来看属性和动态属性"}},[s._v("#")]),s._v(" 接下来看属性和动态属性")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" template "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\n    <div id="div1" class="container">\n        <img :src="imaUrl">\n    </div>\n')]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[a("strong",[s._v("输出结果")])]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("with"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("return _c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'div'")]),s._v(","),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("staticClass:"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"container"')]),s._v(",attrs:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"id"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"div1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(","),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("_c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'img'")]),s._v(","),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("attrs:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"src"')]),s._v(":imaUrl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("imaUrl 是一个变量")])]),s._v(" "),a("p",[s._v("  createElement 创建一个 div，而后是第二个参数，属性 staticClass，之前说的是叫 className 因为 class 是个关键字，但是这里编译完成以后叫 staticClass，这个无所谓，名字可以自己取，staticClass 定义 container，大家仔细看 container 是一个字符串，而后 attrs，attrs 里面 id=div1，再往下第三个参数，是个子元素，子元素里面又是一个 createElement，img 没有子元素了，只有一个属性，属性的值是 src=imgUrl，注意这个地方的 imgUrl 是一个变量，它会通过 with 语法，然后获取 this.imgUrl，container 和 div1 都是静态字符串，这就是属性和动态属性的方式。最终返回的也是一个 vnode。")]),s._v(" "),a("h3",{attrs:{id:"接下来看条件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#接下来看条件"}},[s._v("#")]),s._v(" 接下来看条件")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" template "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\n    <div>\n        <p v-if=\"flag === 'a'\">A</p>\n        <p v-else>B</p>\n    </div>\n")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[a("strong",[s._v("输出结果")])]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("with"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("return _c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'div'")]),s._v(","),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("?_c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'p'")]),s._v(","),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("_v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"A"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(":_c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'p'")]),s._v(","),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("_v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"B"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("首先第一层是一个 div 元素，createElement('div)，没有属性，只有两个子元素，执行子元素的时候有一个 if，else 的判断，")])])}),[],!1,null,null,null);t.default=e.exports}}]);